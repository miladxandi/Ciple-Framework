# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v6
      with:
        # Version of ninja-build to install
        version: "1.12.1"
        # Override default platform with one of [win, mac, linux, winarm64, linux-aarch64]
        platform: "linux"
        # Destination directory, will be added to PATH
        #destination: # optional, default is ninja-build
        # Proxy server
        #http_proxy: # optional

        
    - name: Setup Python
      uses: actions/setup-python@v5.4.0
      with:
        # Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset.
        python-version: "3.9"

    - name: Get Conan
      # You may pin to the exact commit or the version.
      # uses: turtlebrowser/get-conan@c171f295f3f507360ee018736a6608731aa2109d
      uses: turtlebrowser/get-conan@v1.2
      with:
        # Wanted conan version
        version: "2.0.5"
    
    - name: run-cmake
    # You may pin to the exact commit or the version.
    # uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4
      uses: lukka/run-cmake@v10.8
      with:
        # Path to CMakeLists.txt.
        cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
        # The name of the workflow preset. Optional, it cannot be used with any other preset input. This value is stored in the WORKFLOW_PRESET_NAME environment variable, and used by the default value of 'workflowPresetCmdString' input.
        configurePreset: "ninja-conan-release"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake --build ${{github.workspace}}/build/release --target Ciple-Framework -j 10

    - name: Test
      working-directory: ${{github.workspace}}/build/release
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        if [ -f "Ciple-Framework" ]; then
          echo "Ciple-Framework exists. Running tests..."
        else
          echo "Error: Ciple-Framework not found!"
          exit 1
        fi